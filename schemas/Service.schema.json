{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "Service.schema.json",
    "title": "Service",
    "definitions": {
        "Service": {
            "$id": "#Service",
            "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Free-text description of the service",
                    "type": "string"
                },
                "isServiceEnabled": {
                    "type": "boolean",
                    "description": "If FALSE, this particular Service has NOT been enabled for use"
                },
                "hasStarted": {
                    "type": "boolean",
                    "description": "If TRUE, this Service has already been started"
                },
                "startMode": {
                    "type": "string",
                    "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above"
                },
                "isStateful": {
                    "type": "boolean",
                    "description": "If TRUE, this Service can be changed without affecting any other services"
                },
                "serviceDate": {
                    "description": "Date when the service was created (whatever its status).",
                    "type": "string"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the service starts"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the service ends"
                },
                "serviceOrderItem": {
                    "type": "array",
                    "description": "A list of service order items related to this service",
                    "items": {
                        "$ref": "RelatedServiceOrderItem.schema.json#/definitions/RelatedServiceOrderItem"
                    }
                },
                "note": {
                    "type": "array",
                    "description": "A list of notes made on this service",
                    "items": {
                        "$ref": "../Common/Note.schema.json#/definitions/Note"
                    }
                },
                "id": {
                    "description": "Unique identifier of the service",
                    "type": "string"
                },
                "href": {
                    "description": "Reference of the service",
                    "type": "string"
                },
                "serviceType": {
                    "description": "Business type of the service",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the service",
                    "type": "string"
                },
                "state": {
                    "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
                    "$ref": "ServiceStateType.schema.json#/definitions/ServiceStateType"
                },
                "category": {
                    "type": "string",
                    "description": "Is it a customer facing or resource facing service"
                },
                "serviceSpecification": {
                    "description": "The specification from which this service was instantiated",
                    "$ref": "../Service/ServiceSpecificationRef.schema.json#/definitions/ServiceSpecificationRef"
                },
                "feature": {
                    "type": "array",
                    "description": "A list of feature associated with this service ",
                    "items": {
                        "$ref": "../Common/Feature.schema.json#/definitions/Feature"
                    }
                },
                "relatedManagedEntity": {
                    "type": "array",
                    "description": "A list of related managed entity in relationship with this service ",
                    "items": {
                        "$ref": "../Common/RelatedManagedEntityRefOrValue.schema.json#/definitions/RelatedManagedEntityRefOrValue"
                    }
                },
                "serviceCharacteristic": {
                    "type": "array",
                    "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
                    "items": {
                        "$ref": "../Common/Characteristic.schema.json#/definitions/Characteristic"
                    }
                },
                "serviceRelationship": {
                    "type": "array",
                    "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory (useful for describing relies-on, relies-from between CFS for example).",
                    "items": {
                        "$ref": "../Service/ServiceRelationship.schema.json#/definitions/ServiceRelationship"
                    }
                },
                "supportingService": {
                    "type": "array",
                    "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
                    "items": {
                        "$ref": "../Service/ServiceReforValue.schema.json#/definitions/ServiceRefOrValue"
                    }
                },
                "supportingResource": {
                    "type": "array",
                    "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
                    "items": {
                        "$ref": "../Resource/ResourceRef.schema.json#/definitions/ResourceRef"
                    }
                },
                "relatedParty": {
                    "type": "array",
                    "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
                    "items": {
                        "$ref": "../EngagedParty/RelatedParty.schema.json#/definitions/RelatedParty"
                    }
                },
                "place": {
                    "type": "array",
                    "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
                    "items": {
                        "$ref": "../Common/RelatedPlaceRefOrValue.schema.json#RelatedPlaceRefOrValue"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "Entity.schema.json#/Entity"
                }
            ]
        }
    }
}