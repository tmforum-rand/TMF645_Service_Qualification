
======= Service_Qualification 

title: TMF645 Service Qualification Management API REST Specification R18.5.0
  18: style:Heading 1 text:NOTICE
  35: style:Heading 1 text:Table of Contents
  56: style:Heading 1 text:List of Tables
  60: style:Heading 1 text:Introduction
    80: style:Heading 2 text:Lifecycle
  83: style:Heading 1 text:SAMPLE USE CASES
  90: style:Heading 1 text:Support of polymorphism and extension patterns
  99: style:Heading 1 text:RESOURCE MODEL
    100: style:Heading 2 text:Managed Entity and Task Resource Models
      101: style:Heading 3 text:FIRST resource
    103: style:Heading 2 text:Notification Resource Models
      105: style:Heading 3 text:First Notification
  108: style:Heading 1 text: API OPERATIONS
    115: style:Heading 2 text:VERB  url
  117: style:Heading 1 text:API NOTIFICATIONS
    120: style:Heading 2 text:Register listener
    134: style:Heading 2 text:Unregister listener
    145: style:Heading 2 text:Publish Event to listener
  161: style:Heading 1 text:Acknowledgements
    163: style:Heading 2 text:Release History
    167: style:Heading 2 text:Contributors to Document


------- CONTENT ------ 

3: style:Normal text:TM Forum Specification
6: style:Normal text:Service Qualification Management API REST Specification
12: style:Normal text:TMF645
13: style:Normal text:Release 18.5.0
14: style:Normal text:January 2019
17: TABLE 
  18: style:Heading 1 text:NOTICE
  19: style:Normal text:Copyright Â© TM Forum 2019. All Rights Reserved.
  21: style:Normal text:This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the , must be followed) or as required to translate it into languages other than English.
  23: style:Normal text:The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns.
  25: style:Normal text:This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
  27: style:Normal text:Direct inquiries to the TM Forum office:
  29: style:Normal text:4 Century Drive, Suite 100
  30: style:Normal text:Parsippany, NJ 07054, USA
  31: style:Normal text:Tel No. +1 973 944 5100
  32: style:Normal text:Fax No. +1 973 998 7196
  33: style:Normal text:TM Forum Web Page: 
  35: style:Heading 1 text:Table of Contents
  56: style:Heading 1 text:List of Tables
  58: style:Normal text:N/A
  60: style:Heading 1 text:Introduction
  62: style:Normal text:The following document is the specification of the REST API for ServiceQualification management. It includes the model definition as well as all available operations. 
  64: style:Normal text:In the Open Digital Economy where multiple actors (SDPs, CSPs, ...) may be involved with the delivery of an end-to-end service, those actors need to collaborate and interact with the customer as needed.
  65: style:Normal text:Following diagram shows ServiceQualification API within pre-ordering API package:
  67: style:Normal text:Service Qualification API is one of Pre-Ordering Management API Family. Service Qualification API goal is to provide service technical eligibility in the context of the interaction. This API allows to :
  68: style:List Paragraph text:request a specific service eligibility,
  69: style:List Paragraph text:look for service eligibles (or not) from a service category,
  70: style:List Paragraph text:look for service eligibles (or not) from a service specification and characteristics.
  71: style:Normal text:Because the API allows describing service from the inventory, it is also possible to use it to retrieve service available to complete existing service.
  72: style:Normal text:In the request, the following attributes could/must be filled:
  73: style:List Paragraph text:service, serviceSpecification, category or service characteristics will be indicated (at least one is mandatory),
  74: style:List Paragraph text:relatedParty, for which the qualification must be done,
  75: style:List Paragraph text:place, where the customer wants his service,
  76: style:List Paragraph text:expected qualification date.
  77: style:Normal text:In the response, the API will provide qualification result but also:
  78: style:List Paragraph text:Eligibility unavailability reason (if any)
  79: style:List Paragraph text:Alternate service proposal (if any).
    80: style:Heading 2 text:Lifecycle
    81: style:Normal text:Note that an implementation of the specification may enrich the list of states depicted in the diagram. The state machine specifying the typical state change transitions is provided below.
  83: style:Heading 1 text:SAMPLE USE CASES
  84: style:Normal text:Reader will find example of use cases using Usage API in "Open Digital Business Scenarios and Use Cases" document.
  85: style:Normal text:To provide some use-cases:
  86: style:List Paragraph text:Retrieve maximum download/upload speed for  an access service at a specified address
  87: style:List Paragraph text:Check if we can deliver new access and IPTV (4k) services at a specified address
  88: style:List Paragraph text:Check if we can deliver new IP TV service at the same location of an existing and active Accesse service  (i.e. without explicitly specifying address)
  89: style:List Paragraph text:Check if we can upgrade the download speed of an existing and active service from 100 Mb/s to 600Mb/s
  90: style:Heading 1 text:Support of polymorphism and extension patterns
  92: style:Normal text:Support of polymorphic collections and types and schema based extension is provided by means of a list of generic meta-attributes that we describe below. Polymorphism in collections occurs when entities inherit from base entities, for instance a BillingAccount and SettlementAccount inheriting properties from the abstract Account entity.
  93: style:Normal text:Generic support of polymorphism and pattern extensions is described in the TMF API Guidelines v3.0 Part 2 document.
  94: style:Normal text:The @type attribute provides a way to represent the actual class type of an entity. For example, within a list of Account instances some may be instances of BillingAccount where other could be instances of SettlementAccount. The @type gives this information. All resources and sub-resources of this API have a @type attributes that can be provided when this is useful.
  95: style:Normal text:The @referredType can be used within reference entities (like for instance an AccountRef object) to explicitly denote the actual entity type of the referred class. Notice that in reference entities the @type, when used, denotes the class type of the reference itself, such as BillingAccountRef or SettlementAccountRef, and not the class type of the referred object. However since reference classes are rarely sub-classed, @type is generally not useful in reference objects.
  96: style:Normal text:The @schemaLocation property can be used in resources to allow specifying user-defined properties of an Entity or to specify the expected characteristics of an entity.
  97: style:Normal text:The @baseType attribute gives a way to provide explicitly the base of class of a given resource that has been extended.
  98: style:Normal text:

  99: style:Heading 1 text:RESOURCE MODEL
    100: style:Heading 2 text:Managed Entity and Task Resource Models
      101: style:Heading 3 text:FIRST resource
    103: style:Heading 2 text:Notification Resource Models
      105: style:Heading 3 text:First Notification
  108: style:Heading 1 text: API OPERATIONS
  109: style:Normal text:Remember the following Uniform Contract:
  110: TABLE 
  112: style:Normal text:Filtering and attribute selection rules are described in the TMF REST Design Guidelines Part 1 document.
  113: style:Normal text:Notifications are also described in a subsequent section.
    115: style:Heading 2 text:VERB  url
  117: style:Heading 1 text:API NOTIFICATIONS
  118: style:Normal text:For every single of operation on the entities use the following templates and provide sample REST notification POST calls.
  119: style:Normal text:It is assumed that the Pub/Sub uses the Register and UnRegister mechanisms described in the REST Guidelines part 1. Refer to the guidelines for more details.
    120: style:Heading 2 text:Register listener
    121: style:Normal text:  POST /hub
    122: style:Normal text:Description
    123: style:Normal text:Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics. Subsequent POST calls will be rejected by the service if it does not support multiple listeners. In this case DELETE /api/hub/{id} must be called before an endpoint can be created again.
    124: style:Normal text:Behavior
    125: style:Normal text:Returns HTTP/1.1 status code 204 if the request was successful.
    126: style:Normal text:Returns HTTP/1.1 status code 409 if request is not successful.
    127: style:Normal text:Usage Samples
    128: style:Normal text:Here's an example of a request for registering a listener.
    130: TABLE 
    132: style:Normal text:

    134: style:Heading 2 text:Unregister listener
    135: style:Normal text:  DELETE /hub/{id}
    136: style:Normal text:Description
    137: style:Normal text:Clears the communication endpoint address that was set by creating the Hub.
    138: style:Normal text:Behavior
    139: style:Normal text:Returns HTTP/1.1 status code 204 if the request was successful.
    140: style:Normal text:Returns HTTP/1.1 status code 404 if the resource is not found.
    141: style:Normal text:Usage Samples
    142: style:Normal text:Here's an example of a request for un-registering a listener.
    143: TABLE 
    145: style:Heading 2 text:Publish Event to listener
    146: style:Normal text:  POST /client/listener
    147: style:Normal text:Description
    148: style:Normal text:Clears the communication endpoint address that was set by creating the Hub.
    149: style:Normal text:Provides to a registered listener the description of the event that was raised. The /client/listener url is the callback url passed when registering the listener.
    150: style:Normal text:Behavior
    151: style:Normal text:Returns HTTP/1.1 status code 201 if the service is able to set the configuration. 
    152: style:Normal text:Usage Samples
    153: style:Normal text:Here's an example of a notification received by the listener. In this example "EVENT TYPE" should be replaced by one of the notification types supported by this API (see Notification resources Models section) and EVENT BODY refers to the data structure of the given notification type.
    154: TABLE 
    156: style:Normal text:For detailed examples on the general TM Forum notification mechanism, see the TMF REST Design Guidelines Part 1 document.
  161: style:Heading 1 text:Acknowledgements
    163: style:Heading 2 text:Release History
    165: TABLE 
    167: style:Heading 2 text:Contributors to Document
    169: TABLE 


------- TABLES ------ 


table:17 ***

    cell:0,0: ***
      0: text:Latest Update: TM Forum Release 18.5.0
    cell:0,1: ***
      0: text:Member Evaluation
    cell:1,0: ***
      0: text:Version 4.0.0
    cell:1,1: ***
      0: text:IPR Mode: RAND

table:110 ***

    cell:0,0: ***
      0: text:Operation on Entities
    cell:0,1: ***
      0: text:Uniform API Operation
    cell:0,2: ***
      0: text:Description
    cell:1,0: ***
      0: text:Query Entities
    cell:1,1: ***
      0: text:GET Resource
    cell:1,2: ***
      0: text:GET must be used to retrieve a representation of a resource.
      1: text:
    cell:2,0: ***
      0: text:Create Entity
    cell:2,1: ***
      0: text:POST Resource
    cell:2,2: ***
      0: text:POST must be used to create a new resource
    cell:3,0: ***
      0: text:Partial Update of an Entity
    cell:3,1: ***
      0: text:PATCH Resource
    cell:3,2: ***
      0: text:PATCH must be used to partially update a resource
    cell:4,0: ***
      0: text:Complete Update of an Entity
    cell:4,1: ***
      0: text:PUT Resource
    cell:4,2: ***
      0: text:PUT must be used to completely update a resource identified by its resource URI 
    cell:5,0: ***
      0: text:Remove an Entity
    cell:5,1: ***
      0: text:DELETE Resource
    cell:5,2: ***
      0: text:DELETE must be used to remove a resource
    cell:6,0: ***
      0: text:Execute an Action on an Entity 
    cell:6,1: ***
      0: text:POST on TASK Resource
    cell:6,2: ***
      0: text:POST must be used to execute Task Resources
    cell:7,0: ***
      0: text:Other Request Methods
    cell:7,1: ***
      0: text:POST on TASK Resource
    cell:7,2: ***
      0: text:GET and POST must not be used to tunnel other request methods.

table:130 ***

    cell:0,0: ***
      0: text:
Request

    cell:1,0: ***
      0: text:POST /api/hub
      1: text:Accept: application/json
      2: text:
      3: text:{"callback": "http://in.listener.com"}

    cell:2,0: ***
      0: text:
Response

    cell:3,0: ***
      0: text:201
      1: text:Content-Type: application/json
      2: text:Location: /api/hub/42
      3: text:
      4: text:{"id":"42","callback":"http://in.listener.com","query":null}
      5: text:

table:143 ***

    cell:0,0: ***
      0: text:
Request

    cell:1,0: ***
      0: text:DELETE /api/hub/42
      1: text:Accept: application/json

    cell:2,0: ***
      0: text:
Response

    cell:3,0: ***
      0: text:204

table:154 ***

    cell:0,0: ***
      0: text:
Request

    cell:1,0: ***
      0: text:POST /client/listener
      1: text:Accept: application/json
      2: text:
      3: text:{
      4: text:    "event": { 
      5: text:                EVENT BODY 
      6: text:            },
      7: text:    "eventType": "EVENT_TYPE"
      8: text:}

    cell:2,0: ***
      0: text:
Response

    cell:3,0: ***
      0: text:201

table:165 ***

    cell:0,0: ***
      0: text:Release Number
    cell:0,1: ***
      0: text:Date 
    cell:0,2: ***
      0: text:Release led by:
    cell:0,3: ***
      0: text:Description 
    cell:1,0: ***
      0: text:Release 1.0
    cell:1,1: ***
      0: text:15/04/2016
    cell:1,2: ***
      0: text:Pierre Gauthier
TM Forum

      1: text:Takayuki Nakamura 
      2: text:NTT
      3: text:nakamura.takayuki@nttcom.jp
      4: text:Ludovic Robert
      5: text:Orange
      6: text:Ludovic.robert@orange.com
    cell:1,3: ***
      0: text:First release of the document
    cell:2,0: ***
      0: text:Release 2.0
    cell:2,1: ***
      0: text:02/10/2017
    cell:2,2: ***
      0: text:Mariano Belaunde
Orange

      1: text:Ludovic Robert
      2: text:Orange
      3: text:Ludovic.robert@orange.com
    cell:2,3: ***
      0: text:Generated from API Data Model..
      1: text:+update to comply with API new pattern
      2: text:+ AP 910 feedbacks
      3: text:+ MEF change requests redistribution to TMF
    cell:3,0: ***
      0: text:Release 18.0.0
      1: text:Version 3.0.1
    cell:3,1: ***
      0: text:05-Jan-2018
    cell:3,2: ***
      0: text:Ludovic Robert
      1: text:Orange
      2: text:
      3: text:Sophie Bouleau
      4: text:Orange
      5: text:.com
    cell:3,3: ***
      0: text:Alignment with ProductOfferingQualification API
    cell:4,0: ***
      0: text:Release 18.5.0
      1: text:Version 4.0.0
    cell:4,1: ***
      0: text:13-Jan-2019
    cell:4,2: ***
      0: text:Jonathan Goldberg
      1: text:Amdocs
      2: text:
    cell:4,3: ***
      0: text:Schema alignment for NaaS APIs

table:169 ***

    cell:0,0: ***
      0: text:Mariano Belaunde
    cell:0,1: ***
      0: text:Orange
    cell:1,0: ***
      0: text:Pierre Gauthier
    cell:1,1: ***
      0: text:TM Forum	
    cell:2,0: ***
      0: text:Takayuki Nakamura
    cell:2,1: ***
      0: text:NTT
    cell:3,0: ***
      0: text:Ludovic Robert
    cell:3,1: ***
      0: text:Orange
    cell:4,0: ***
      0: text:Sophie Bouleau
    cell:4,1: ***
      0: text:Orange
    cell:5,0: ***
      0: text:Jonathan Goldberg
    cell:5,1: ***
      0: text:Amdocs
